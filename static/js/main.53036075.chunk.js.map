{"version":3,"sources":["StateProvider.js","reducer.js","Search.js","Pages/Home.js","useGoogleSearch.js","Keys.js","SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","to","Avatar","src","alt","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","pagemap","cse_image","length","displayLink","link","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.53036075.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n//Preparing the data layer\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\n//hook which allows us to pull information from the data layer\r\nexport const useStateValue = () => useContext(StateContext);","export const initialState = {\r\n    term: null,\r\n  };\r\n  \r\n  export const actionTypes = {\r\n    SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\r\n  };\r\n  \r\n  const reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n      case actionTypes.SET_SEARCH_TERM:\r\n        return {\r\n          ...state,\r\n          term: action.term,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  export default reducer;","import React, { useState } from \"react\";\r\nimport \"./Search.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\n\r\nfunction Search({ hideButtons = false }) {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const search = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"You hit search\", input);\r\n\r\n    dispatch({\r\n        type: actionTypes.SET_SEARCH_TERM,\r\n        term: input\r\n    })\r\n\r\n    history.push(\"/search\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"search__input\">\r\n        <SearchIcon className=\"search__inputIcon\" />\r\n        <input value={input} onChange={(e) => setInput(e.target.value)} />\r\n        <MicIcon />\r\n      </div>\r\n\r\n      {!hideButtons ? (\r\n        <div className=\"search__buttons\">\r\n          <Button type=\"submit\" onClick={search} variant=\"outlined\">\r\n            Google Search\r\n          </Button>\r\n          <Button variant=\"outlined\">I'm Feeling Lucky</Button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"search__buttons\">\r\n          <Button className=\"search__buttonsHidden\" type=\"submit\" onClick={search} variant=\"outlined\">\r\n            Google Search\r\n          </Button>\r\n          <Button className=\"search__buttonsHidden\" variant=\"outlined\">I'm Feeling Lucky</Button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n\r\n","\r\nimport React from \"react\";\r\nimport \"./Home.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Search from \"../Search\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__header\">\r\n        <div className=\"home__headerLeft\">\r\n          <Link to=\"/about\">About</Link>\r\n          <Link to=\"/store\">Store</Link>\r\n        </div>\r\n        <div className=\"home__headerRight\">\r\n          <Link to=\"/gmail\">Gmail</Link>\r\n          <Link to=\"/images\">Images</Link>\r\n          <AppsIcon />\r\n          <Avatar />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"home__body\">\r\n        <img\r\n          src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"home__inputContainer\">\r\n          <Search />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import { useState, useEffect } from \"react\";\r\nimport API_KEY from \"./Keys\";\r\n\r\nconst CONTEXT_KEY = \"0b9c2d0be2b734ab0\";\r\n\r\nconst useGoogleSearch = (term) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      fetch(\r\n        `https://www.googleapis.com/customsearch/v1?key=\r\n        ${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          setData(result);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, [term]);\r\n\r\n  return { data };\r\n};\r\n\r\nexport default useGoogleSearch;","export const API_KEY = \"AIzaSyDZuzViLMpXlMkM1o36zctndnrpylZyj8c\";\r\n\r\nexport default API_KEY;","\r\nimport React from \"react\";\r\nimport \"./SearchPage.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport Response from \"./response\";\r\nimport useGoogleSearch from \"./useGoogleSearch\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Search from \"./Search\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nfunction SearchPage() {\r\n  const [{ term }, dispatch] = useStateValue();\r\n  //LIVE API call\r\n  const { data } = useGoogleSearch(term);\r\n\r\n  //const data = Response;\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <div className=\"searchPage\">\r\n      <div className=\"searchPage__header\">\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"searchPage__logo\"\r\n            src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\r\n            alt=\"\"\r\n          />\r\n        </Link>\r\n\r\n        <div className=\"searchPage__headerbody\">\r\n          <Search hideButtons />\r\n\r\n          <div className=\"searchPage__options\">\r\n            <div className=\"searchPage__optionsLeft\">\r\n              <div className=\"searchPage__option\">\r\n                <SearchIcon />\r\n                <Link to=\"/all\">All</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <DescriptionIcon />\r\n                <Link to=\"/news\">News</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <ImageIcon />\r\n                <Link to=\"/images\">Images</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <LocalOfferIcon />\r\n                <Link to=\"/shopping\">Shopping</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <RoomIcon />\r\n                <Link to=\"/maps\">maps</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <MoreVertIcon />\r\n                <Link to=\"/more\">more</Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"searchPage__optionsRight\">\r\n              <div className=\"searchPage__options\">\r\n                <Link to=\"/settings\">Settings</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <Link to=\"/tools\">Tools</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {term && (\r\n        <div className=\"searchPage__results\">\r\n          <p className=\"searchPage__resultCount\">\r\n            About {data?.searchInformation.formattedTotalResults} results (\r\n            {data?.searchInformation.formattedSearchTime}seconds) for {term}\r\n          </p>\r\n\r\n          {data?.items.map((item) => (\r\n            <div className=\"searchPage__results\">\r\n              <a className=\"searchPage__resultLink \" href=\"item.link\">\r\n                  {item.pagemap?.cse_image?.length>0 && item.pagemap?.cse_image[0].src && (\r\n                      <img className=\"searchPage__resultImage\" src={\r\n                          item.pagemap?.cse_image?.length>0 && item.pagemap?.cse_image[0]?.src\r\n                      }\r\n                      alt=\"\"\r\n                      />\r\n                  )}\r\n                  {item.displayLink}</a>\r\n              <a className=\"searchPage__resultTitle\" href={item.link}>\r\n                <h2>{item.title}</h2>\r\n              </a>\r\n              <p className=\"searchPage__resultSnippet\">{item.snippet}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./Pages/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SearchPage from \"./SearchPage\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/search\">\n            <SearchPage />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}